package com.example.footballquiz;

import android.content.Intent;
import android.os.Bundle;
import android.os.CountDownTimer;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

import java.util.ArrayList;

public class QuizActivity extends AppCompatActivity {

    // üß© Khai b√°o c√°c th√†nh ph·∫ßn UI
    private TextView tvQuestion, tvTimer;
    private RadioGroup rgOptions;
    private RadioButton rbOption1, rbOption2, rbOption3, rbOption4;
    private Button btnNext;

    // üß† D·ªØ li·ªáu c√¢u h·ªèi
    private ArrayList<Question> questionList;
    private int currentQuestionIndex = 0;
    private int score = 0;
    private CountDownTimer countDownTimer;

    // ‚è≥ Th·ªùi gian gi·ªõi h·∫°n m·ªói c√¢u (15 gi√¢y)
    private static final long TIME_LIMIT = 15000;
    private long timeLeft = TIME_LIMIT;

    private String playerName; // ‚úÖ L∆∞u t√™n ng∆∞·ªùi ch∆°i truy·ªÅn t·ª´ MainActivity

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_quiz);

        // üîó √Ånh x·∫° view
        tvQuestion = findViewById(R.id.tvQuestion);
        tvTimer = findViewById(R.id.tvTimer);
        rgOptions = findViewById(R.id.rgOptions);
        rbOption1 = findViewById(R.id.rbOption1);
        rbOption2 = findViewById(R.id.rbOption2);
        rbOption3 = findViewById(R.id.rbOption3);
        rbOption4 = findViewById(R.id.rbOption4);
        btnNext = findViewById(R.id.btnNext);

        // üßç‚Äç‚ôÇÔ∏è Nh·∫≠n t√™n ng∆∞·ªùi ch∆°i t·ª´ MainActivity
        playerName = getIntent().getStringExtra("playerName");
        if (playerName == null || playerName.trim().isEmpty()) {
            playerName = "Ng∆∞·ªùi ch∆°i"; // D·ª± ph√≤ng
        }

        // üß© L·∫•y 10 c√¢u h·ªèi ng·∫´u nhi√™n t·ª´ c∆° s·ªü d·ªØ li·ªáu
        DBHelper dbHelper = new DBHelper(this);
        questionList = dbHelper.getRandomQuestions(10);

        // N·∫øu kh√¥ng c√≥ c√¢u h·ªèi
        if (questionList.isEmpty()) {
            tvQuestion.setText("‚ùå Kh√¥ng c√≥ c√¢u h·ªèi n√†o trong c∆° s·ªü d·ªØ li·ªáu!");
            btnNext.setEnabled(false);
            return;
        }

        // Hi·ªÉn th·ªã c√¢u h·ªèi ƒë·∫ßu ti√™n
        showQuestion();

        // üëâ S·ª± ki·ªán n√∫t ‚ÄúC√¢u ti·∫øp theo‚Äù
        btnNext.setOnClickListener(v -> {
            checkAnswer();
            currentQuestionIndex++;
            if (currentQuestionIndex < questionList.size()) {
                showQuestion();
            } else {
                finishQuiz();
            }
        });
    }

    // üñ•Ô∏è Hi·ªÉn th·ªã c√¢u h·ªèi hi·ªán t·∫°i
    private void showQuestion() {
        resetTimer();
        startTimer();

        Question q = questionList.get(currentQuestionIndex);
        tvQuestion.setText((currentQuestionIndex + 1) + ". " + q.getQuestion());
        rbOption1.setText(q.getOption1());
        rbOption2.setText(q.getOption2());
        rbOption3.setText(q.getOption3());
        rbOption4.setText(q.getOption4());
        rgOptions.clearCheck();
    }

    // ‚úÖ Ki·ªÉm tra ƒë√°p √°n v√† c·ªông ƒëi·ªÉm
    private void checkAnswer() {
        int selectedId = rgOptions.getCheckedRadioButtonId();
        if (selectedId == -1) return; // ch∆∞a ch·ªçn ƒë√°p √°n

        int selectedAnswer = 0;
        if (selectedId == R.id.rbOption1) selectedAnswer = 1;
        else if (selectedId == R.id.rbOption2) selectedAnswer = 2;
        else if (selectedId == R.id.rbOption3) selectedAnswer = 3;
        else if (selectedId == R.id.rbOption4) selectedAnswer = 4;

        // So s√°nh v·ªõi ƒë√°p √°n ƒë√∫ng
        if (selectedAnswer == questionList.get(currentQuestionIndex).getCorrectAnswer()) {
            score++;
        }
    }

    // ‚úÖ Khi k·∫øt th√∫c quiz
    private void finishQuiz() {
        if (countDownTimer != null) countDownTimer.cancel();

        Intent intent = new Intent(QuizActivity.this, ResultActivity.class);
        intent.putExtra("score", score);
        intent.putExtra("total", questionList.size());
        intent.putExtra("playerName", playerName); // ‚úÖ G·ª≠i t√™n ng∆∞·ªùi ch∆°i
        startActivity(intent);
        finish();
    }

    // ‚è±Ô∏è B·ªô ƒë·∫øm th·ªùi gian cho m·ªói c√¢u h·ªèi
    private void startTimer() {
        countDownTimer = new CountDownTimer(timeLeft, 1000) {
            @Override
            public void onTick(long millisUntilFinished) {
                timeLeft = millisUntilFinished;
                tvTimer.setText("‚è≥ " + (timeLeft / 1000) + "s");
            }

            @Override
            public void onFinish() {
                // N·∫øu h·∫øt gi·ªù m√† ch∆∞a ch·ªçn th√¨ t·ª± chuy·ªÉn c√¢u
                currentQuestionIndex++;
                if (currentQuestionIndex < questionList.size()) {
                    showQuestion();
                } else {
                    finishQuiz();
                }
            }
        }.start();
    }

    // üîÑ Reset l·∫°i ƒë·ªìng h·ªì m·ªói l·∫ßn sang c√¢u m·ªõi
    private void resetTimer() {
        if (countDownTimer != null) {
            countDownTimer.cancel();
        }
        timeLeft = TIME_LIMIT;
    }

    // üßπ Gi·∫£i ph√≥ng b·ªô ƒë·∫øm khi tho√°t activity
    @Override
    protected void onDestroy() {
        if (countDownTimer != null) countDownTimer.cancel();
        super.onDestroy();
    }
}
